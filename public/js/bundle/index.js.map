{"mappings":"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","sources":["public/js/alert.js","public/js/login.js","public/js/signup.js","public/js/mapbox.js","public/js/changeAccount.js","public/js/loadMore.js","public/js/index.js","public/js/logout.js"],"sourcesContent":["/* eslint-disable */\n\nexport const hideAlert = () => {\n  const alert = document.querySelector('.alert');\n  if (alert) alert.parentElement.removeChild(alert);\n};\n\n// type is success or error\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n","/* eslint-disable */\nimport { showAlert } from './alert';\n\n// // TESTING DOM elements\n// const loginForm = document.querySelector('.form');\n\nexport const login = async (email, password) => {\n  // Send a POST request\n  const request = await fetch('/api/v1/users/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n  const response = await request.json();\n  if (response.status === 'success') {\n    // show alert\n    showAlert('success', 'You are now logged in');\n    // go to home page\n    setTimeout(() => {\n      location.assign('/');\n    }, 1000);\n  } else {\n    showAlert('error', response.message);\n  }\n};\n\n// // TESTIN add event listener to the .form element\n// if (loginForm) {\n//   loginForm.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     // get email and password by id\n//     const email = document.getElementById('email').value;\n//     const password = document.getElementById('password').value;\n//     login(email, password);\n//   });\n// }\n\n///////////////////////\n// OLD AXIOS VERSION\n///////////////////////\n\n//import axios from 'axios';\n\n// export const login = async (email, password) => {\n//   try {\n//     // Send a POST request\n//     const response = await axios({\n//       method: 'post',\n//       url: 'http://localhost:3000/api/v1/users/login',\n//       data: {\n//         email,\n//         password,\n//       },\n//     });\n//     if (response.data.status === 'success') {\n//       // go to home page\n//       setTimeout(() => {\n//         location.assign('/');\n//       }, 500);\n//     }\n//   } catch (error) {\n//     alert(error.response.data.message);\n//   }\n// };\n","/* eslint-disable */\nimport { showAlert } from './alert';\n\n// // TESTING DOM elements\n// const loginForm = document.querySelector('.form');\n\nexport const signup = async (name, email, password, passwordConfirm) => {\n  // Send a POST request\n  const request = await fetch('/api/v1/users/signup', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password,\n      passwordConfirm,\n    }),\n  });\n  const response = await request.json();\n  if (response.status === 'success') {\n    // show alert\n    showAlert('success', 'You now have an account');\n    // go to home page\n    setTimeout(() => {\n      location.assign('/');\n    }, 1000);\n  } else {\n    showAlert('error', response.message);\n  }\n};\n","/* eslint-disable */\n\nexport const initMapbox = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoiamRlZWphdCIsImEiOiJjbDdkN3J5bncwazhvM3ZvbDJ3Mjl3dGh2In0.MqeSMRvJZuR5gu7Ndwww-A';\n  const map = new mapboxgl.Map({\n    container: 'map', // container ID\n    style: 'mapbox://styles/jdeejat/cj20he7w700402rmjs5zfkwlj', // style URL\n    // scrollZoom: false,\n    cooperativeGestures: true,\n\n    //   center: [-74.5, 40], // starting position [lng, lat]\n    //   zoom: 9, // starting zoom\n    //   projection: 'globe', // display the map as a 3D globe\n    //interactive: false, // disable map interactivity\n    // more details https://docs.mapbox.com/mapbox-gl-js/api/map/\n  });\n  map.on('style.load', () => {\n    map.setFog({}); // Set the default atmosphere style\n  });\n  map.addControl(new mapboxgl.FullscreenControl());\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  locations.forEach((loc) => {\n    // create marker\n    const el = document.createElement('div');\n    el.className = 'marker';\n\n    // add marker\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .setPopup(\n        new mapboxgl.Popup({ offset: 25 }) // add popups\n          .setHTML(\n            `<a href='${loc.googleMapsLink}' target=\"_blank\">${loc.pointName}</a>`\n          )\n      )\n      .addTo(map);\n\n    // add popup OLD\n    // new mapboxgl.Popup({ offset: 25 })\n    //   .setLngLat(loc.coordinates)\n    //   .setHTML(\n    //     `<a href='${loc.googleMapsLink}' target=\"_blank\">${loc.pointName}</a>`\n    //   )\n    //   .addTo(map);\n\n    // extend map bounds to include current location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 150,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n","/* eslint-disable */\nimport { showAlert } from './alert';\n\nexport const userChange = async (form, name) => {\n  // Send a POST request\n  // dev url http://localhost:3000/api/v1/users/updateMe\n  const request = await fetch('/api/v1/users/updateMe', {\n    method: 'PATCH',\n    body: form,\n  });\n  const response = await request.json();\n  if (response.status === 'success') {\n    // show alert\n    showAlert('success', 'Data updated');\n  } else {\n    showAlert('error', response.message);\n  }\n};\n\nexport const passwordChange = async (\n  currentPassword,\n  newPassword,\n  newPasswordConfirm\n) => {\n  // Send a POST request\n  const request = await fetch('/api/v1/users/updatePassword', {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      currentPassword,\n      newPassword,\n      newPasswordConfirm,\n    }),\n  });\n  const response = await request.json();\n  if (response.status === 'success') {\n    // show alert\n    showAlert('success', 'Password updated');\n  } else {\n    showAlert('error', response.message);\n  }\n};\n","/* eslint-disable */\nimport { showAlert } from './alert';\n\nexport const loadMore = async (page = 0, limit = 12) => {\n  // fetch data from the api\n  const request = await fetch(`/?limit=${limit}&page=${page}`, {\n    method: 'GET',\n  });\n\n  Toastify({\n    text: 'This is a toast',\n    duration: 3000,\n    destination: 'https://github.com/apvarun/toastify-js',\n    newWindow: true,\n    close: true,\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    stopOnFocus: true, // Prevents dismissing of toast on hover\n    style: {\n      background: 'linear-gradient(to right, #00b09b, #96c93d)',\n    },\n    onClick: function () {}, // Callback after click\n  }).showToast();\n\n  return await request.text();\n};\n","/* eslint-disable */\n//import 'core-js/stable';\nimport { login } from './login';\nimport { signup } from './signup';\nimport { logout } from './logout';\nimport { initMapbox } from './mapbox';\nimport { userChange, passwordChange } from './changeAccount';\nimport { loadMore } from './loadMore';\n\n// DOM elements\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst signupForm = document.querySelector('.form--signup');\nconst logoutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst loadMoreBtn = document.getElementById('load-more');\n\n// INITIALIZE MAPBOX\nif (mapBox) {\n  const locations = JSON.parse(mapBox.dataset.locations);\n  initMapbox(locations);\n}\n\n// add event listener to the .form element\nif (loginForm)\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    // get email and password by id\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n\n// sign up\nif (signupForm)\n  signupForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    // get name email password and passwordConfirm by id\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('passwordConfirm').value;\n    signup(name, email, password, passwordConfirm);\n  });\n\nif (logoutBtn)\n  // add event listener to the .nav__el--logout element\n  logoutBtn.addEventListener('click', logout);\n\n// add event listener to the .form-user-data element\nif (userDataForm)\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n\n    userChange(form);\n  });\n\n// add event listener to the .form-user-data element\nif (userPasswordForm)\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    // change value of .btn--save-password to 'Updating...'\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\n    // get password fields by id\n    const currentPassword = document.getElementById('password-current').value;\n    const newPassword = document.getElementById('password').value;\n    const newPasswordConfirm =\n      document.getElementById('password-confirm').value;\n\n    await passwordChange(currentPassword, newPassword, newPasswordConfirm);\n    // change value of .btn--save-password to 'Save password'\n    document.querySelector('.btn--save-password').textContent = 'Save password';\n    // clear password fields\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n\n// load more\nif (loadMoreBtn) {\n  loadMoreBtn.addEventListener('click', async () => {\n    const loadPage = loadMoreBtn.dataset.page * 1 + 1;\n    const moreMovies = await loadMore(loadPage);\n    // insert data into the DOM card-container\n    document\n      .querySelector('.card-container')\n      .insertAdjacentHTML('beforeend', moreMovies);\n    // increment page number\n    loadMoreBtn.dataset.page = loadPage;\n  });\n}\n","/* eslint-disable */\nimport { showAlert } from './alert';\n\n// // TESTING DOM elements\n// const loginForm = document.querySelector('.form');\n\nexport const logout = async () => {\n  // Send a POST request\n  const request = await fetch('/api/v1/users/logout', {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  });\n  const response = await request.json();\n  if (response.status === 'success') {\n    showAlert('success', 'You are now logged out');\n    setTimeout(() => {\n      location.reload(true);\n    }, 2000);\n  } else {\n    showAlert('error', 'Something went wrong. Try again!');\n  }\n};\n"],"names":["$66a9ec97d8e5ebb3$export$516836c6a9dfc573","alert","document","querySelector","parentElement","removeChild","$66a9ec97d8e5ebb3$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$934f72971f9f0cfb$export$596d806903d1f59e","async","email","password","request","fetch","method","headers","Accept","body","JSON","stringify","response","json","status","location","assign","message","$12eadaf76d30bd7f$export$7200a869094fec36","name","passwordConfirm","$36e678f3ba42579c$export$2180ffca888e302a","locations","mapboxgl","accessToken","map","Map","container","style","cooperativeGestures","on","setFog","addControl","FullscreenControl","bounds","LngLatBounds","forEach","loc","el","createElement","className","Marker","element","anchor","setLngLat","coordinates","setPopup","Popup","offset","setHTML","googleMapsLink","pointName","addTo","extend","fitBounds","padding","top","bottom","left","right","$d531dcc56b5a04a0$export$69c31d9c55da2a9d","form","$d531dcc56b5a04a0$export$4f6a6a61ca2ea38","currentPassword","newPassword","newPasswordConfirm","$f136c2f8f900fe42$export$b346ae7c9d204e07","page","limit","Toastify","text","duration","destination","newWindow","close","gravity","position","stopOnFocus","background","onClick","showToast","$06aa3c3dc4ea2086$var$mapBox","getElementById","$06aa3c3dc4ea2086$var$loginForm","$06aa3c3dc4ea2086$var$signupForm","$06aa3c3dc4ea2086$var$logoutBtn","$06aa3c3dc4ea2086$var$userDataForm","$06aa3c3dc4ea2086$var$userPasswordForm","$06aa3c3dc4ea2086$var$loadMoreBtn","parse","dataset","addEventListener","e","preventDefault","value","reload","FormData","append","files","textContent","loadPage","moreMovies"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}